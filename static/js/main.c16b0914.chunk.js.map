{"version":3,"sources":["logo.svg","services/weather.js","store/actions/actions.js","cmps/Counter.jsx","cmps/Day.jsx","cmps/Days.jsx","cmps/Home.jsx","cmps/Linkcard.jsx","cmps/Favorites.jsx","App.js","serviceWorker.js","store/reducer/counter.js","store/reducer/result.js","store/reducer/weather.js","store/reducer/favorites.js","index.js"],"names":["module","exports","getForecastBycity","getCityKeysByTyping","cityKey","a","axios","get","weather","data","DailyForecasts","localStorage","setItem","JSON","stringify","parse","getItem","str","apiList","console","log","map","res","name","LocalizedName","code","Key","setWeather","type","val","Counter","bb","onClick","props","onIncrementCounter","onAddResult","ctr","onDecreaseCounter","this","results","onDeleteItem","id","value","Component","connect","state","counter","dispatch","actions","setTimeout","onIncrement","idToDelete","Day","celTemp","Math","floor","day","Temperature","Maximum","Value","descrition","IconPhrase","numIcon","Icon","length","imgUrl","timeStamp","EpochDate","dayNumberInWeek","Date","toDateString","split","className","style","color","src","alt","Days","days","key","uuid","Home","typing","match","params","city","citiesDatalist","isShowingName","isShowingSearch","setStrState","e","setState","target","cityStr","submit","find","toLowerCase","toLocaleLowerCase","history","push","alert","onSetWeather","doNotShowName","showSearch","doNotShowSearch","saveCity","addFavorite","removeFavorite","options","isFavorite","fvr","some","favorite","weth","margin","onSubmit","autoFocus","list","onChange","onTypeCity","citiesDataSet","fav","favorites","then","evt","Linkcard","pushRouter","pushHistory","onDelete","stopPropagation","Favorites","to","exact","path","component","Boolean","window","location","hostname","initialState","reducer","action","concat","filter","result","rootStore","combineReducers","counterReducer","resultReducer","weatheReducer","favoritesReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","getState","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c16b0914.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios'\r\n\r\n\r\nexport default {\r\n    getForecastBycity,\r\n    getCityKeysByTyping\r\n}\r\nasync function getForecastBycity(cityKey){\r\n    const weather = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=HVUzpdiIvuokQ3svlWLk6aFpckz48vhd`)\r\n    if(weather.data.DailyForecasts){\r\n        localStorage.setItem('myweather',JSON.stringify(weather.data))\r\n        return weather.data;\r\n    }\r\n    return JSON.parse(localStorage.getItem('myweather'))\r\n}\r\n\r\nasync function getCityKeysByTyping(str){\r\n    if(str===''){\r\n        return null\r\n    }\r\n    const apiList = await axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=HVUzpdiIvuokQ3svlWLk6aFpckz48vhd&q=${str}`)\r\n    console.log(apiList.data,'weaAAA')\r\n    return apiList.data.map((res)=>{\r\n        return {name:res.LocalizedName,code:res.Key}\r\n    })\r\n}\r\n","import weather from '../../services/weather'\r\n\r\n\r\nexport const DELETE_RESULT = 'DELETE_RESULT'\r\nexport const ADD_RESULT = 'ADD_RESULT'\r\nexport const INCREMENT = 'INCREMENT'\r\nexport const DECREASE = 'DECREASE'\r\n\r\n\r\nexport const onAddFavorite=(val)=>{\r\n   return {\r\n       type:'ADD_FAVORITE',\r\n       val:val\r\n   }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst onIncrement = (val) =>{\r\n    return {\r\n            type: INCREMENT,\r\n            val:val\r\n        }\r\n}\r\nexport const setCities =(cities) =>{\r\n    return {\r\n        type:'SET_DATA_CITIES',\r\n        val:cities\r\n    }\r\n}\r\nexport const typingCity=(str) =>{\r\n    return (dispatch) => {\r\n        return  weather.getCityKeysByTyping(str)\r\n        .then((res)=>{\r\n            dispatch(setCities(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const onSetWeather = (code) => {\r\n    \r\n    return (dispatch) => {\r\n        return  weather.getForecastBycity(code)\r\n        .then((res)=>{\r\n            dispatch(setWeather(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const setWeather = (weather) => {\r\n    return {\r\n        type:'SET_WEATHER',\r\n        val: weather\r\n    }\r\n}\r\nexport const onRemoveFavorite = (code)=> {\r\n    return {\r\n        type:'REMOVE_FAVORITE',\r\n        val:code\r\n    }\r\n}\r\n\r\nexport const increment = (val) => {\r\n    return dispatch => {\r\n        setTimeout(() =>{\r\n           dispatch(onIncrement(val))\r\n        },2000)\r\n    }\r\n        \r\n    // return {\r\n    //     type: INCREMENT,\r\n    //     val:val\r\n    // }\r\n}\r\nexport const decrease = (val) => {\r\n    return {\r\n        type: DECREASE,\r\n        val: val\r\n    }\r\n}\r\nexport const addResult = (res) => {\r\n    return {\r\n        type: ADD_RESULT,\r\n        val: res\r\n    }\r\n}\r\nexport const deleteResult = (id) => {\r\n    return {\r\n        type: DELETE_RESULT,\r\n        id:id\r\n    }\r\n    \r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport weather from '../services/weather'\r\n\r\nimport * as actions from '../store/actions/actions'\r\n\r\nexport class Counter extends Component {\r\n    async componentDidMount(){\r\n        const bb = await weather.getForecastBycity()\r\n        console.log(bb);\r\n        \r\n\r\n\r\n    }\r\n     render() {\r\n      \r\n        return (\r\n            <div>\r\n                <button onClick={()=>{this.props.onIncrementCounter();\r\n                                      this.props.onAddResult(this.props.ctr)}}>UP</button>\r\n\r\n                <button onClick={()=>{this.props.onDecreaseCounter();\r\n                                      this.props.onAddResult(this.props.ctr)}}>DOWN</button>\r\n                {this.props.ctr}\r\n\r\n                {this.props.results.map((res)=>{\r\n                   return <div onClick={()=>this.props.onDeleteItem(res.id)}>{res.value}</div>\r\n                })}\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ctr:state.ctr.counter,\r\n        results:state.res.results\r\n    }\r\n}\r\nconst mapDispatchToprops = dispatch => {\r\n    return {\r\n        onAddResult:(res)=>dispatch(actions.addResult(res)),\r\n        onIncrementCounter:()=>dispatch(actions.increment(10)),\r\n        onDecreaseCounter:()=>dispatch(actions.decrease(10)),\r\n        onDeleteItem:(idToDelete)=>dispatch(actions.deleteResult(idToDelete))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToprops)(Counter) \r\n","import React, { Component } from 'react'\r\nimport '../style/day.css'\r\n\r\nexport default class Day extends Component {\r\n    render() {\r\n        const celTemp =Math.floor((this.props.day.Temperature.Maximum.Value-32)*5/9)\r\n        const descrition = this.props.day.Day.IconPhrase\r\n        const numIcon = (''+this.props.day.Day.Icon).length === 1 ? '0'+this.props.day.Day.Icon : this.props.day.Day.Icon\r\n        const imgUrl= `https://developer.accuweather.com/sites/default/files/${numIcon}-s.png`\r\n        \r\n        const timeStamp = this.props.day.EpochDate\r\n       \r\n        const dayNumberInWeek = new Date(timeStamp*1000).toDateString().split(' ')[0]\r\n        \r\n        \r\n       \r\n        return (\r\n            <div className=\"day\">\r\n                <h4 style={{color:'rgb(180, 190, 190)'}}>{dayNumberInWeek}</h4>\r\n               <h2>{celTemp}°</h2>\r\n               <img className=\"img\" src={imgUrl} alt=\"\"/>\r\n               <span>{descrition}</span>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Day from './Day'\r\nimport '../style/days.css'\r\n\r\nimport uuid from 'react-uuid'\r\n\r\nexport default class Days extends Component {\r\n    render() {\r\n        const days =this.props.days.map((day) => {\r\n            return <Day key ={uuid()} day={day}/>\r\n        })\r\n        return (\r\n            <div className=\"days\">\r\n                {days}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../style/home.css'\r\nimport { connect } from 'react-redux'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Days from './Days'\r\nimport * as actions from '../store/actions/actions'\r\n\r\nexport class Home extends Component {\r\n    state={\r\n        typing:this.props.match.params.city,\r\n        citiesDatalist:[{name:this.props.match.params.city,code:this.props.match.params.code}],\r\n        isShowingName:true,\r\n        isShowingSearch:false,\r\n        \r\n    }\r\n    setStrState=(e)=>{\r\n        \r\n        this.setState({\r\n            typing:e.target.value,\r\n            citiesDatalist:this.props.cityStr? this.props.cityStr.map((city)=>{\r\n                return city\r\n            }) : this.state.citiesDatalist\r\n        })\r\n    }\r\n    componentWillMount(){\r\n        this.props.onSetWeather((this.state.citiesDatalist.find((city)=>{\r\n            return city.name.toLowerCase()===this.state.typing.toLocaleLowerCase()\r\n            })).code)\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                isShowingName:true,\r\n                isShowingSearch:false\r\n            })\r\n    }\r\n    submit = () => {\r\n        const code =(this.state.citiesDatalist.find((city)=>{\r\n            return city.name.toLowerCase()===this.state.typing.toLocaleLowerCase()\r\n        })).code\r\n        console.log(code)\r\n         this.props.history.push(`/${this.state.typing}/${code}`)\r\n         alert(this.props.match.params.code)\r\n        this.props.onSetWeather((this.state.citiesDatalist.find((city)=>{\r\n            return city.name.toLowerCase()===this.state.typing.toLocaleLowerCase()\r\n            })).code)\r\n            \r\n            this.setState({\r\n                ...this.state,\r\n                isShowingName:true,\r\n                isShowingSearch:false,\r\n              \r\n            })\r\n    }\r\n    doNotShowName=()=>{\r\n        this.setState({\r\n            ...this.state,\r\n            isShowingName:false\r\n        })\r\n    }\r\n    showSearch=()=>{\r\n        this.setState({\r\n            ...this.state,\r\n            isShowingSearch:true\r\n        })\r\n\r\n    }\r\n    doNotShowSearch=()=>{\r\n        this.setState({\r\n            isShowingSearch:false\r\n        })\r\n    }\r\n    saveCity=async()=>{\r\n       await this.props.addFavorite({name:this.props.match.params.city,code:this.props.match.params.code})\r\n    }\r\n    removeFavorite=async()=>{\r\n        await this.props.removeFavorite(this.props.match.params.code)\r\n    }\r\n    render() {\r\n        console.log(this.props.match.params.city,this.props.match.params.code)\r\n        const name = this.state.typing\r\n          const options = this.props.cityStr && this.props.cityStr.map((city)=>{\r\n            return <option code={city.code} value={`${city.name}`}></option>\r\n         })\r\n         const isFavorite=this.props.fvr.some((favorite)=>{\r\n               return favorite.code===this.props.match.params.code\r\n            })\r\n         \r\n        const days = <Days days ={this.props.weth.DailyForecasts} />\r\n        return (\r\n            <div  className=\"home\">\r\n              \r\n            \r\n                 {this.state.isShowingSearch &&<div onClick={this.doNotShowSearch} className=\"modal\"></div>}\r\n                {this.state.isShowingName &&\r\n                <div className=\"name\">\r\n                        {!this.state.isShowingSearch && \r\n                        <button onClick={this.showSearch} className=\"goSearchButton\">\r\n                            {<SearchIcon></SearchIcon>}\r\n                        </button>}\r\n                            <h3 style={{margin:0}} >{name}</h3>\r\n                            {!isFavorite && <div>\r\n                        <FavoriteBorderIcon style={{color:\"blue\"}}  onClick={this.saveCity}></FavoriteBorderIcon>\r\n                    </div> } \r\n                    {isFavorite && <div>\r\n                    <FavoriteIcon style={{color:\"red\"}} onClick={this.removeFavorite}></FavoriteIcon>\r\n                    </div> } \r\n                </div> }\r\n\r\n             { this.state.isShowingSearch &&  <form className=\"form\" onSubmit={this.submit}>\r\n              { <input autoFocus onClick={this.doNotShowName} className=\"input\" list=\"cities\"\r\n              value = {this.state.typing}\r\n              onChange={(e)=>{\r\n                  this.props.onTypeCity(e)\r\n                            this.setStrState(e)                         \r\n              }}/>}\r\n\r\n            <datalist id=\"cities\">\r\n                {options}\r\n            </datalist>\r\n            <button className=\"button\"><SendIcon/></button>\r\n            </form>}\r\n\r\n                 {this.props.weth.DailyForecasts && (\r\n                     days\r\n                 )}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    weth:state.weth.weather,\r\n    cityStr:state.weth.citiesDataSet,\r\n    fvr:state.fav.favorites\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetWeather:(code)=>dispatch(actions.onSetWeather(code)),\r\n        onTypeCity:(evt)=>dispatch(actions.typingCity(evt.target.value,)),\r\n        addFavorite:(val)=>dispatch(actions.onAddFavorite(val)),\r\n        removeFavorite:(code)=>dispatch(actions.onRemoveFavorite(code))\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport '../style/link.css'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default class Linkcard extends Component {\r\n    pushRouter=()=>{\r\n        console.log(this.props);\r\n        this.props.pushHistory(this.props.city.name,this.props.city.code)\r\n    }\r\n    onDelete=(evt)=>{\r\n        evt.stopPropagation()\r\n    }\r\n    \r\n    \r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"link\" onClick={this.pushRouter}>\r\n                {this.props.city.name}\r\n                <div onClick={this.onDelete}>\r\n                    <DeleteIcon></DeleteIcon>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        \r\n           \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../style/favorites.css'\r\nimport * as actions from '../store/actions/actions'\r\nimport Linkcard from '../cmps/Linkcard'\r\nimport uuid from 'react-uuid'\r\n\r\n\r\nexport class Favorites extends Component {\r\n    componentWillMount(){\r\n        \r\n    }\r\n    pushHistory = (city,code)=> {\r\n        this.props.history.push(`/${city}/${code}`)\r\n    }\r\n    render() {\r\n        const favorites=this.props.fvr.map((city)=>{\r\n            return <Linkcard pushHistory={this.pushHistory} key={city.id} city={city}></Linkcard>\r\n        })\r\n        return (\r\n            <div className=\"favorites\">\r\n                {favorites}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fvr:state.fav.favorites\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = dispatch=>{\r\n    return{\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites)\r\n","import React from 'react';\nimport {Route, Switch, Router,Link} from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport {connect} from 'react-redux'\nimport Counter from './cmps/Counter'\nimport Home from './cmps/Home'\nimport Favorites from './cmps/Favorites'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar\">\n        <Link to='/favorites'>FAVORITES </Link>|\n        <Link to='/jerusalem/213225'> HOME</Link>\n      </nav>\n     \n     \n      <Switch>\n        <Route\n        exact\n        path='/favorites'\n        component ={Favorites}>\n        </Route>\n\n        <Route\n        exact\n        path='/:city/:code'\n        component ={Home}>\n        </Route>\n      </Switch>\n      {/* <Counter></Counter> */}\n      {/* <Home></Home> */}\n    </div>\n  );\n}\nconst mapStateToProps = state =>{\n  return {\n    ctr:state.counter\n  }\n};\n\nexport default connect(mapStateToProps)(App) ;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actions'\r\n\r\nconst initialState = {\r\n    counter:0,\r\n   \r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch (action.type){\r\n        case   actionTypes.INCREMENT :\r\n            return {\r\n                ...state,\r\n                counter:state.counter+action.val,\r\n            }\r\n        case actionTypes.DECREASE :\r\n            return {\r\n                ...state,\r\n                counter:state.counter-action.val,\r\n            }\r\n    }\r\n    return state\r\n  \r\n}\r\nexport default reducer;","import * as actionTypes from '../actions/actions'\r\n\r\nconst initialState = {\r\n    results:[]\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch (action.type){\r\n        case actionTypes.ADD_RESULT :\r\n            console.log(action.val);\r\n            return {\r\n                results:state.results.concat({value:action.val,id:new Date})\r\n            }\r\n        case actionTypes.DELETE_RESULT :\r\n            const idToDelete = action.id\r\n            return {\r\n               \r\n                results:state.results.filter((result) => {\r\n                    return result.id!==idToDelete\r\n\r\n                })\r\n\r\n            }\r\n\r\n\r\n    }\r\n    return state\r\n  \r\n}\r\nexport default reducer;","import * as actionTypes from '../actions/actions'\r\nconst initialState = {\r\n    weather:{},\r\n    citiesDataSet:[]\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch (action.type){\r\n       case 'SET_WEATHER':\r\n           return {\r\n               ...state,\r\n               weather:action.val\r\n           }\r\n           case 'SET_DATA_CITIES':\r\n            return {\r\n                ...state,\r\n                citiesDataSet:action.val\r\n            }\r\n    }\r\n    return state\r\n  \r\n}\r\nexport default reducer;     \r\n","import * as actionTypes from '../actions/actions'\r\nimport uuid from 'react-uuid'\r\nconst initialState = {\r\n    favorites:[]\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch (action.type){\r\n       case 'ADD_FAVORITE':\r\n           return {\r\n               ...state,\r\n               favorites:state.favorites.concat({name:action.val.name,code:action.val.code,id:uuid()})\r\n           }\r\n        case 'REMOVE_FAVORITE':\r\n            return {\r\n                ...state,\r\n                favorites:state.favorites.filter((fav)=>{\r\n                    return fav.code !== action.val\r\n                })\r\n            }\r\n    }\r\n    return state\r\n  \r\n}\r\nexport default reducer;     \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, combineReducers,applyMiddleware,compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport {HashRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport counterReducer from './store/reducer/counter'\nimport resultReducer from './store/reducer/result'\nimport weatheReducer from './store/reducer/weather'\nimport favoritesReducer from './store/reducer/favorites'\nimport thunk from 'redux-thunk'\n\nconst rootStore = combineReducers({\n    ctr:counterReducer,\n    res:resultReducer,\n    weth:weatheReducer,\n    fav:favoritesReducer\n})\n\nconst logger = store =>{\n    return next =>{\n        return action => {\n            console.log('[MIDDLE] DISPATCH : ',action);\n            const result  = next(action);\n            console.log('[MIDDLE] NEXT STATE ' ,store.getState());\n            return result\n        }\n    }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootStore,composeEnhancers(applyMiddleware(logger,thunk)))\nReactDOM.render(<Provider store={store}><HashRouter><App /></HashRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}